version: '2.4'

services:
  # umjesto pre-built image-a koristim stock image
  # koji vrti app iz bind-mounted volumen-a
  web5-main:
    image: node:16
    environment:
      - APP_VERSION=1.0.0
    env_file:
      - .env
    ports:
     - 3000:3000
     - 9229:9229 # na ovaj port se spaja VS Code debugger
    command: "npm run debug"
    working_dir: "/app"
    volumes:
      - ./server:/app # izlažem lokalne datoteke
    healthcheck:
      #
      # ABOUT HEALTHCHECK
      #
      # Healthckeck pokrećemo pomoću `ts-node` zato jer je `healthcheck.ts`
      # TypeScript datoteka, koju ne možemo pokrenuti izravno putem `node`
      # Dodatno  koristim `npx` zato jer je `ts-node` nije instaliran globalno
      #
      # PRODUKCIJSKI HEALTHCHECK
      #
      # Healthcheck kakav je ovdje definiran radi SAMO u debug
      # načinu rada
      #
      # ZAŠTO? Zato jer ...
      # (a) kod debug načina pokrećemo izravno TypeScript datoteke,
      #     a ne pre-buildani source
      # (b) build operacija TypeScript prevodi u običaj JavaScript
      #      pa `ts-node` nije potreban, a nije ni instaliran (kao
      #      niti jedan dev dependency)
      # (c) Dockerfile koristi **distroless** base image, koji zahtjeva
      #     specifičan način pokretanja healthcheck-a
      #
      # Za produkcijski image moramo koristiti slijedeći test:
      #
      #    test: ["CMD", "/nodejs/bin/node", "healthcheck.js"]
      #
      test: ["CMD", "npx", "ts-node", "src/healthcheck.ts"]
      # test se radi svakih 20 sekundi
      interval: 20s
      # test mora dati rezultat unutar 15 sekundi
      timeout: 15s
      # nakon što test 3x ne prođe skripta 
      retries: 3
      # kod rolling update-a service mora postati "zdrav" unutar 30 sekundi
      # > nakon toga napravi rollback na prethodnu verziju
      start_period: 30s
    # kod shutdown-a čekaj 30 sekundi da se service sam zaustavi
    # > `stoppable` čeka 10sec da svi pending zahtjevi završe,
    #   prije no što ih počne prisilno ubijati
    #   -> to znači da bi unutar 30 sec `stoppable` trebao sve očistiti
    #   i zaustaviti server nakon toga Docker radi `hard kill`
    stop_grace_period: 30s
